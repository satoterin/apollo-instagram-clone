[{"/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/App.tsx":"1","/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/components-ui/Avatar.tsx":"2","/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/index.tsx":"3","/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/components/Navbar.tsx":"4","/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/containers/FormWrapper.tsx":"5","/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/reportWebVitals.ts":"6","/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/routes/Home.tsx":"7","/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/routes/Posts.tsx":"8","/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/components-ui/Spinner.tsx":"9","/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/components-ui/Alert.tsx":"10","/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/components-ui/InputField.tsx":"11","/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/components/AddPost.tsx":"12","/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/components-ui/Card.tsx":"13","/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/routes/Profile.tsx":"14","/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/generated/graphql.tsx":"15","/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/routes/Register.tsx":"16","/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/components-ui/Container.tsx":"17","/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/components/PostCard.tsx":"18","/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/routes/Login.tsx":"19","/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/components-ui/Button.tsx":"20","/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/containers/PrivateRoute.tsx":"21","/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/utils/cropImage.ts":"22","/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/utils/dataURLtoFile.ts":"23","/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/components/DropDown.tsx":"24","/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/components/AddComment.tsx":"25","/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/components/LikeButton.tsx":"26","/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/routes/SinglePost.tsx":"27","/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/components-ui/Modal.tsx":"28","/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/components/ProfileRight.tsx":"29","/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/components/ImageLikeButton.tsx":"30","/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/routes/EditProfile.tsx":"31","/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/components/ChangeProfilePhoto.tsx":"32"},{"size":1503,"mtime":1612171650240,"results":"33","hashOfConfig":"34"},{"size":738,"mtime":1612164569741,"results":"35","hashOfConfig":"34"},{"size":686,"mtime":1610424007576,"results":"36","hashOfConfig":"34"},{"size":1899,"mtime":1613628032276,"results":"37","hashOfConfig":"34"},{"size":985,"mtime":1609915262203,"results":"38","hashOfConfig":"34"},{"size":425,"mtime":1606828576503,"results":"39","hashOfConfig":"34"},{"size":791,"mtime":1608204004559,"results":"40","hashOfConfig":"34"},{"size":981,"mtime":1612532285344,"results":"41","hashOfConfig":"34"},{"size":406,"mtime":1612271724879,"results":"42","hashOfConfig":"34"},{"size":391,"mtime":1608026898530,"results":"43","hashOfConfig":"34"},{"size":1567,"mtime":1613654319425,"results":"44","hashOfConfig":"34"},{"size":2765,"mtime":1612163258207,"results":"45","hashOfConfig":"34"},{"size":402,"mtime":1612349993076,"results":"46","hashOfConfig":"34"},{"size":4862,"mtime":1612758931788,"results":"47","hashOfConfig":"34"},{"size":35871,"mtime":1613470849268,"results":"48","hashOfConfig":"34"},{"size":3330,"mtime":1611927475702,"results":"49","hashOfConfig":"34"},{"size":264,"mtime":1608194245598,"results":"50","hashOfConfig":"34"},{"size":4727,"mtime":1613480239014,"results":"51","hashOfConfig":"34"},{"size":2876,"mtime":1613635423600,"results":"52","hashOfConfig":"34"},{"size":865,"mtime":1612191295777,"results":"53","hashOfConfig":"34"},{"size":903,"mtime":1608194347627,"results":"54","hashOfConfig":"34"},{"size":2546,"mtime":1609913045962,"results":"55","hashOfConfig":"34"},{"size":409,"mtime":1609425327871,"results":"56","hashOfConfig":"34"},{"size":2312,"mtime":1613647433559,"results":"57","hashOfConfig":"34"},{"size":1851,"mtime":1612271229888,"results":"58","hashOfConfig":"34"},{"size":708,"mtime":1612271224636,"results":"59","hashOfConfig":"34"},{"size":6723,"mtime":1612271247704,"results":"60","hashOfConfig":"34"},{"size":1316,"mtime":1612162988477,"results":"61","hashOfConfig":"34"},{"size":2191,"mtime":1612540826146,"results":"62","hashOfConfig":"34"},{"size":787,"mtime":1612149654734,"results":"63","hashOfConfig":"34"},{"size":4912,"mtime":1612541782378,"results":"64","hashOfConfig":"34"},{"size":5044,"mtime":1612272024155,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"59u8hc",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"85"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"85"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"68"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"78"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"78"},"/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/App.tsx",[],["141","142"],"/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/components-ui/Avatar.tsx",[],"/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/index.tsx",[],["143","144"],"/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/components/Navbar.tsx",[],"/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/containers/FormWrapper.tsx",[],["145","146"],"/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/reportWebVitals.ts",[],"/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/routes/Home.tsx",[],"/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/routes/Posts.tsx",[],["147","148"],"/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/components-ui/Spinner.tsx",[],"/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/components-ui/Alert.tsx",[],"/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/components-ui/InputField.tsx",[],"/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/components/AddPost.tsx",[],"/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/components-ui/Card.tsx",[],"/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/routes/Profile.tsx",[],"/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/generated/graphql.tsx",[],"/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/routes/Register.tsx",[],"/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/components-ui/Container.tsx",[],"/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/components/PostCard.tsx",[],"/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/routes/Login.tsx",[],"/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/components-ui/Button.tsx",[],"/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/containers/PrivateRoute.tsx",[],"/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/utils/cropImage.ts",[],["149","150"],"/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/utils/dataURLtoFile.ts",[],"/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/components/DropDown.tsx",[],"/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/components/AddComment.tsx",["151"],"import { useState } from 'react';\nimport Spinner from '../components-ui/Spinner';\nimport {\n  useAddCommentMutation,\n  GetSinglePostDocument,\n  GetUserDocument,\n} from '../generated/graphql';\n\ninterface AddCommentProps {\n  postId: string;\n  customRef: React.RefObject<HTMLInputElement>;\n  className?: string;\n}\n\nconst AddComment: React.FC<AddCommentProps> = ({\n  postId,\n  customRef,\n  className,\n}) => {\n  const [text, setText] = useState('');\n  const [submitting, setSubmitting] = useState(false);\n\n  const [addComment] = useAddCommentMutation({\n    variables: { postId, text },\n    refetchQueries: [{ query: GetSinglePostDocument, variables: { postId } }],\n  });\n\n  const onSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    try {\n      setSubmitting(true);\n      const res = await addComment();\n      if (res) {\n        setSubmitting(false);\n      }\n      if (res.data?.addComment) setText('');\n      console.log(res);\n    } catch (err) {\n      console.log(err);\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <div\n      className={`px-3 relative py-3 border-t-2 justify-items-end ${className}`}\n    >\n      <div\n        hidden={!submitting}\n        className='absolute top-0 left-0 w-full h-full bg-black bg-opacity-50'\n      >\n        <Spinner size='small' />\n      </div>\n      <form className='flex items-center w-full' onSubmit={onSubmit}>\n        <input\n          ref={customRef}\n          type='text'\n          placeholder='Add Comment...'\n          className='flex-1 border-none outline-none'\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n        />\n        <button\n          className='pl-2 font-bold text-blue-800 disabled:opacity-40'\n          disabled={!text}\n        >\n          Post\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default AddComment;\n","/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/components/LikeButton.tsx",["152"],"import {\n  GetSinglePostDocument,\n  GetUserDocument,\n  useToggleLikeMutation,\n} from '../generated/graphql';\n\ninterface LikeButtonProps {\n  postId: string;\n}\n\nconst LikeButton: React.FC<LikeButtonProps> = ({ postId, children }) => {\n  const [toggleLike] = useToggleLikeMutation({\n    variables: { postId },\n    refetchQueries: [{ query: GetSinglePostDocument, variables: { postId } }],\n  });\n\n  const likeAction = async () => {\n    try {\n      const res = await toggleLike();\n      if (res.data?.toggleLike) {\n        console.log('like toggled successfully');\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return <div onClick={likeAction}>{children}</div>;\n};\n\nexport default LikeButton;\n","/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/routes/SinglePost.tsx",[],"/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/components-ui/Modal.tsx",["153"],"import React, { useEffect, useRef } from 'react';\nimport { AiOutlineClose } from 'react-icons/ai';\n\nexport interface ModalProps {\n  isOpen: boolean;\n  setIsOpen: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst Modal: React.FC<ModalProps> = ({ isOpen, setIsOpen, children }) => {\n  const modalRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    function handleClickOutside(event: any) {\n      if (modalRef.current && !modalRef.current.contains(event.target)) {\n        setIsOpen(false);\n      }\n    }\n\n    // Bind the event listener\n    document.addEventListener('mousedown', handleClickOutside as any);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener('mousedown', handleClickOutside as any);\n    };\n  }, [modalRef]);\n\n  return isOpen ? (\n    <div className='fixed top-0 left-0 z-50 w-screen h-screen bg-black bg-opacity-70'>\n      <button\n        className='absolute text-white top-5 right-10'\n        onClick={() => setIsOpen(false)}\n      >\n        <AiOutlineClose size='1.8em' />\n      </button>\n      <div\n        ref={modalRef}\n        className='absolute w-full transform -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2 md:w-5/12'\n      >\n        {children}\n      </div>\n    </div>\n  ) : (\n    <div></div>\n  );\n};\n\nexport default Modal;\n","/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/components/ProfileRight.tsx",["154","155"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { apolloClient } from '..';\nimport Avatar from '../components-ui/Avatar';\nimport Button from '../components-ui/Button';\nimport { MeDocument, useGetFollowSuggestionsQuery } from '../generated/graphql';\n\nconst ProfileRight: React.FC = () => {\n  const { me } = apolloClient.readQuery({ query: MeDocument });\n\n  const { data, loading } = useGetFollowSuggestionsQuery();\n  return (\n    <>\n      <div className='flex items-center py-3 mt-3'>\n        <Link to={`/u/${me.username}`}>\n          <Avatar\n            className='w-16 h-16'\n            src={me.profile.imgURL}\n            alt={me.username}\n          />\n        </Link>\n        <div className='ml-4'>\n          <Link to={`/u/${me.username}`}>\n            <strong>{me.username}</strong>\n          </Link>\n          <p className='text-gray-600'>{me.profile.name}</p>\n        </div>\n      </div>\n      <div className='flex items-center justify-between py-3 '>\n        <p className='font-bold text-gray-500'>Suggestions For You</p>\n        <p className='font-semibold text-gray-800 cursor-pointer'>See All</p>\n      </div>\n      <div className='flex flex-col'>\n        {data && data.getFollowSuggestions ? (\n          data.getFollowSuggestions.map(({ username, profile: { imgURL } }) => (\n            <div className='flex items-center justify-between'>\n              <div className='flex items-center'>\n                <Avatar className='mx-3' src={imgURL} alt='Profile Picture' />\n                <div className='flex flex-col justify-center'>\n                  <Link to={`/u/${username}`}>\n                    <span className='text-sm font-semibold hover:underline'>\n                      {username}\n                    </span>\n                  </Link>\n                  <p className='text-sm text-gray-400'>Suggested for you</p>\n                </div>\n              </div>\n              <button className='text-sm font-semibold text-blue-500 border-none shadow-none'>\n                Follow\n              </button>\n            </div>\n          ))\n        ) : (\n          <p>No Suggestions</p>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default ProfileRight;\n","/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/components/ImageLikeButton.tsx",[],"/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/routes/EditProfile.tsx",["156","157","158"],"import { useEffect, useState } from 'react';\nimport { apolloClient } from '..';\nimport Button from '../components-ui/Button';\nimport Container from '../components-ui/Container';\nimport InputField from '../components-ui/InputField';\nimport { MeDocument, useEditProfileMutation, User } from '../generated/graphql';\nimport { useRouteMatch } from 'react-router-dom';\nimport ChangeProfilePhoto from '../components/ChangeProfilePhoto';\n\nconst EditProfile: React.FC = () => {\n  const [formData, setFormData] = useState({\n    name: '',\n    website: '',\n    bio: '',\n    gender: '',\n    username: '',\n    email: '',\n  });\n\n  const match = useRouteMatch();\n\n  const { me } = apolloClient.readQuery({ query: MeDocument });\n\n  const user: User = me;\n\n  useEffect(() => {\n    setFormData({\n      ...formData,\n      name: user.profile.name,\n      website: user.profile.website,\n      bio: user.profile.bio,\n      gender: user.profile.gender,\n      username: user.username,\n      email: user.email,\n    });\n  }, [me]);\n\n  const { name, website, bio, gender, username, email } = formData;\n\n  const [formErrors, setFormErrors] = useState({\n    website: '',\n    username: '',\n    email: '',\n  });\n\n  const [editProfile] = useEditProfileMutation({\n    variables: { name, website, bio, gender, email, username },\n  });\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const onSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setFormErrors({} as any);\n    try {\n      const res = await editProfile();\n      if (res.data) {\n        const { ok, errors } = res.data.editProfile;\n        if (errors) {\n          errors.forEach(({ path, message }) => {\n            setFormErrors((prev) => ({ ...prev, [path]: message }));\n          });\n        }\n      }\n      console.log(res);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <Container>\n      <div className='flex bg-white border border-gray-300 rounded-lg md:pl-0'>\n        <div className='hidden pt-5 border-gray-300 md:w-80 md:border-r md:flex'>\n          <div className='flex flex-col flex-1'>\n            <ul>\n              <li className='px-5 py-2 font-bold border-l-2 border-black'>\n                Edit Profile\n              </li>\n              <li className='px-5 py-2'>Change Password</li>\n            </ul>\n          </div>\n        </div>\n        <div className='flex flex-col w-full p-5 md:mx-20'>\n          <div className='py-4'>\n            <ChangeProfilePhoto username={username} />\n          </div>\n          <form className='flex flex-col w-full' onSubmit={onSubmit}>\n            <InputField\n              inline\n              name='name'\n              label='Name'\n              error=''\n              helperText=\"Help people discover your account by using the name you're known by: either your full name, nickname, or business name.\"\n              value={name}\n              onChange={onChange}\n            />\n            <InputField\n              inline\n              name='username'\n              label='Username'\n              error={formErrors.username}\n              value={username}\n              onChange={onChange}\n            />\n            <InputField\n              inline\n              type='url'\n              name='website'\n              label='Website'\n              error={formErrors.website}\n              value={website}\n              onChange={onChange}\n            />\n            <div className='gap-10 mb-5 md:grid md:grid-cols-2-form'>\n              <label htmlFor='bio' className='block font-bold md:text-right'>\n                Bio\n              </label>\n              <textarea\n                name='bio'\n                className='w-full px-2 py-1 mb-3 border border-gray-300 rounded-md bg-blue-50 focus:border-gray-500'\n                value={bio}\n                onChange={(e) => {\n                  setFormData({ ...formData, bio: e.target.value });\n                }}\n              ></textarea>\n            </div>\n\n            <InputField\n              inline\n              name='email'\n              label='Email'\n              error={formErrors.email}\n              value={email}\n              onChange={onChange}\n            />\n\n            <InputField\n              inline\n              name='gender'\n              label='Gender'\n              error=''\n              value={gender}\n              onChange={onChange}\n            />\n            <div className='gap-10 mb-5 md:grid md:grid-cols-2-form'>\n              <div></div>\n              <Button\n                className='inline-block w-20 text-left'\n                disabled={!username}\n                color='dark'\n                type='submit'\n              >\n                Submit\n              </Button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </Container>\n  );\n};\n\nexport default EditProfile;\n","/home/aseerkt/Documents/Practice Projects/Instagram_Clone/apollo-graphql-instagram/client/src/components/ChangeProfilePhoto.tsx",["159"],"import React, { useRef, useState } from 'react';\nimport Cropper from 'react-easy-crop';\nimport { Area } from 'react-easy-crop/types';\nimport { FaCamera } from 'react-icons/fa';\nimport {\n  MeDocument,\n  useChangeProfilePhotoMutation,\n} from '../generated/graphql';\nimport Button from '../components-ui/Button';\nimport { getCroppedImg } from '../utils/cropImage';\nimport { dataURLtoFile } from '../utils/dataURLtoFile';\nimport { apolloClient } from '..';\nimport Spinner from '../components-ui/Spinner';\n\ninterface ChangeProfilePhotoProps {\n  username: string;\n}\n\nconst ChangeProfilePhoto: React.FC<ChangeProfilePhotoProps> = ({\n  username,\n}) => {\n  const { me } = apolloClient.readQuery({ query: MeDocument });\n\n  const triggerFileSelectPopup = () => inputRef.current?.click();\n\n  const imgSrc =\n    me.profile.imgURL === '/user.jpg'\n      ? '/user.jpg'\n      : `${process.env.REACT_APP_EXPRESS_URI}${me.profile.imgURL}`;\n  const [displayImage, setDisplayImage] = useState(imgSrc);\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [croppedArea, setCroppedArea] = useState<Area | null>(null);\n  const [crop, setCrop] = useState({ x: 0, y: 0 });\n  const [zoom, setZoom] = useState(1);\n  const [image, setImage] = useState<string | null>(null);\n  const [fileName, setFileName] = useState('');\n  const [submitting, setSubmitting] = useState(false);\n\n  const [changeProfilePhoto] = useChangeProfilePhotoMutation();\n\n  const onCropComplete = (\n    _croppedAreaPercentage: any,\n    croppedAreaPixels: Area\n  ) => {\n    setCroppedArea(croppedAreaPixels);\n  };\n\n  const onSelectFile = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.files && event.target.files.length > 0) {\n      const reader = new FileReader();\n      reader.readAsDataURL(event.target.files[0]);\n      reader.addEventListener('load', () => {\n        setSubmitting(false);\n        setImage(reader.result as any);\n      });\n    }\n  };\n\n  const setCroppedImage = async () => {\n    setSubmitting(true);\n    const croppedImageCanvas = await getCroppedImg(image!, croppedArea!);\n    croppedImageCanvas.toBlob((blob) => {\n      setDisplayImage(URL.createObjectURL(blob));\n    });\n    const imgURL = croppedImageCanvas.toDataURL();\n    const fileToSend = dataURLtoFile(imgURL, fileName);\n    try {\n      const res = await changeProfilePhoto({\n        variables: { file: fileToSend },\n        refetchQueries: [{ query: MeDocument }],\n      });\n      if (res.data?.changeProfilePhoto) {\n        setImage(null);\n      } else {\n        setSubmitting(false);\n      }\n      console.log(res);\n    } catch (err) {\n      setSubmitting(false);\n      console.log(err);\n    }\n  };\n\n  return (\n    <div className='py-5'>\n      {image ? (\n        <div className='fixed top-0 left-0 z-30 w-screen h-screen bg-black bg-opacity-50'>\n          <div className='relative w-full mx-auto mt-20 md:w-6/12 h-80'>\n            {submitting && (\n              <div className='absolute top-0 left-0 z-40 flex items-center w-full h-full bg-white bg-opacity-50'>\n                <Spinner />\n              </div>\n            )}\n            <Cropper\n              image={image}\n              crop={crop}\n              zoom={zoom}\n              aspect={1}\n              onCropChange={setCrop}\n              onZoomChange={setZoom}\n              onCropComplete={onCropComplete}\n            />\n            <Button\n              className='absolute z-50 mt-2 transform -translate-x-1/2 -bottom-5 left-1/2'\n              color='dark'\n              onClick={setCroppedImage}\n            >\n              Set Profile Image\n            </Button>\n          </div>\n        </div>\n      ) : (\n        <div className='grid items-center grid-cols-2 gap-5 mb-5 md:grid-cols-2-form md:gap-10'>\n          <div\n            onClick={() => {\n              inputRef.current?.click();\n            }}\n            className='ml-auto mr-auto transform border-2 border-gray-500 rounded-full cursor-pointer md:mr-0 hover:border-green-600 hover:scale-110 w-28 h-28'\n          >\n            <img\n              className='w-full h-full rounded-full'\n              src={displayImage}\n              alt='profile_photo_sample_display'\n            />\n            <div className='relative w-full py-3'>\n              <Button\n                onClick={triggerFileSelectPopup}\n                className='absolute left-0 right-0 w-10 ml-auto mr-auto -top-5'\n                title='Choose Profile Image'\n              >\n                <FaCamera />\n              </Button>\n            </div>\n          </div>\n          <div className=''>\n            <input\n              type='file'\n              accept='image/*'\n              ref={inputRef}\n              onChange={onSelectFile}\n              hidden\n            />\n            <div>\n              <p className='mb-1 text-2xl'>{username}</p>\n              <Button onClick={() => inputRef.current?.click()}>\n                Change Profile Photo\n              </Button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ChangeProfilePhoto;\n",{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"160","replacedBy":"164"},{"ruleId":"162","replacedBy":"165"},{"ruleId":"160","replacedBy":"166"},{"ruleId":"162","replacedBy":"167"},{"ruleId":"160","replacedBy":"168"},{"ruleId":"162","replacedBy":"169"},{"ruleId":"160","replacedBy":"170"},{"ruleId":"162","replacedBy":"171"},{"ruleId":"172","severity":1,"message":"173","line":6,"column":3,"nodeType":"174","messageId":"175","endLine":6,"endColumn":18},{"ruleId":"172","severity":1,"message":"173","line":3,"column":3,"nodeType":"174","messageId":"175","endLine":3,"endColumn":18},{"ruleId":"176","severity":1,"message":"177","line":25,"column":6,"nodeType":"178","endLine":25,"endColumn":16,"suggestions":"179"},{"ruleId":"172","severity":1,"message":"180","line":5,"column":8,"nodeType":"174","messageId":"175","endLine":5,"endColumn":14},{"ruleId":"172","severity":1,"message":"181","line":11,"column":17,"nodeType":"174","messageId":"175","endLine":11,"endColumn":24},{"ruleId":"172","severity":1,"message":"182","line":20,"column":9,"nodeType":"174","messageId":"175","endLine":20,"endColumn":14},{"ruleId":"176","severity":1,"message":"183","line":36,"column":6,"nodeType":"178","endLine":36,"endColumn":10,"suggestions":"184"},{"ruleId":"172","severity":1,"message":"185","line":60,"column":17,"nodeType":"174","messageId":"175","endLine":60,"endColumn":19},{"ruleId":"172","severity":1,"message":"186","line":36,"column":20,"nodeType":"174","messageId":"175","endLine":36,"endColumn":31},"no-native-reassign",["187"],"no-negated-in-lhs",["188"],["187"],["188"],["187"],["188"],["187"],["188"],["187"],["188"],"@typescript-eslint/no-unused-vars","'GetUserDocument' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setIsOpen'. Either include it or remove the dependency array. If 'setIsOpen' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["189"],"'Button' is defined but never used.","'loading' is assigned a value but never used.","'match' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'formData', 'user.email', 'user.profile.bio', 'user.profile.gender', 'user.profile.name', 'user.profile.website', and 'user.username'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.",["190"],"'ok' is assigned a value but never used.","'setFileName' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},"Update the dependencies array to be: [modalRef, setIsOpen]",{"range":"195","text":"196"},"Update the dependencies array to be: [formData, me, user.email, user.profile.bio, user.profile.gender, user.profile.name, user.profile.website, user.username]",{"range":"197","text":"198"},[774,784],"[modalRef, setIsOpen]",[997,1001],"[formData, me, user.email, user.profile.bio, user.profile.gender, user.profile.name, user.profile.website, user.username]"]